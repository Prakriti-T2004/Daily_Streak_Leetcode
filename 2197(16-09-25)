import java.util.*;
class Solution {
    public List<Integer> replaceNonCoprimes(int[] nums) {
        List<Integer> stack = new ArrayList<>();

        for (int num : nums) {
            int current = num;

            while (!stack.isEmpty()) {
                int top = stack.get(stack.size() - 1);
                int gcd = gcd(top, current);

                if (gcd > 1) {
                    stack.remove(stack.size() - 1);
                    current = lcm(top, current);
                } else {
                    break;
                }
            }

            stack.add(current);
        }

        return stack;
    }

    private int gcd(int a, int b) {
        while (b != 0) {
            int temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }

    private int lcm(int a, int b) {
        return a / gcd(a, b) * b;
    }
}
